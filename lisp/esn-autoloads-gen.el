;;; esn-autoloads-gen.el --- Autoloads for Emacs Speaks NONMEM
;; 
;; Filename: esn-autoloads-gen.el
;; Description: 
;; Author: Matthew L. Fidler
;; Maintainer: 
;; Created: Mon Aug 30 09:15:50 2010 (-0500)
;; Version: 
;; Last-Updated: Wed Apr 27 19:11:23 2011 (-0500)
;;           By: Matthew L. Fidler
;;     Update #: 294
;; URL: 
;; Keywords: 
;; Compatibility: 
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;; Commentary: 
;; 
;; Generates esn-autoloads.el file
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;; Change log:
;; 31-Aug-2010    Matthew L. Fidler  
;;    Last-Updated: Tue Aug 31 16:54:39 2010 (-0500) #140 (Matthew L. Fidler)
;;    Had autoloads also generate esn-profile.el
;;
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 3, or
;; (at your option) any later version.
;; 
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;; 
;; You should have received a copy of the GNU General Public License
;; along with this program; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth
;; Floor, Boston, MA 02110-1301, USA.
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 
;;; Code:
(require 'esn-start)
(require 'esn-fun)
;;;###autoload
(defun esn-gen-autoloads ()
  "Generate Emacs Speaks NONEM Autoloads using `update-file-autoloads' and put in `esn-autoloads.el'"
  (interactive)
  (let (
        (all-files (file-expand-wildcards (concat esn-path "lisp/*.el")))
        (generated-autoload-file (concat esn-path "esn-autoloads.el")))
    (mapc
     (lambda(el-file)
       (unless (string-match "esn-autoloads.el" el-file)
         (update-file-autoloads el-file)))
     all-files)
    (byte-recompile-directory (concat esn-path "lisp/") 0)))

;;;###autoload
(defun esn-gen-profile ()
  "Generate Emacs Speaks NONMEM profile"
  (interactive)
  (let (
        (all-files (file-expand-wildcards (concat (file-name-directory (or load-file-name (buffer-file-name))) "*.el")))
        (load-file)
        (lst1 '())
        (lst2 '())
        )
    (mapc
     (lambda(el-file)
       (with-temp-buffer
         (setq load-file (file-name-sans-extension (file-name-nondirectory el-file)))
         (message "Examining %s" load-file)
         (setq lst1 '())
         (insert-file-contents el-file)
         (goto-char (point-min))
         (while (re-search-forward "(\\(?:defun[ \t\n]+\\|defmacro[ \t\n]+\\|defalias[ \t\n]+'\\)\\(\\(?:esn\\|company\\|ac\\)-[^ \t\n()]+\\)" nil t)
           (add-to-list 'lst1 (match-string 1))
           )
         (add-to-list 'lst2 (list load-file lst1))
         )
       )
     all-files)
    (with-temp-file "./esn-profile.el"
      (insert ";;; esn-profiles -- Autogenerated from esn-autoloads-gen.el\n(require 'elp)\n(defun esn-profile ()\n  (interactive)\n  (let ((debug-on-error 't))\n")
      (insert (mapconcat
               (lambda(load-fns)
                 (unless (= 0 (length (nth 1 load-fns))) (concat "    (require '" (nth 0 load-fns) ")\n")))
               lst2 ""))
      (insert "    (setq elp-function-list (quote (")
      (insert
       (mapconcat
        (lambda (load-fns)
          (mapconcat
           (lambda (fn)
             fn)
           (nth 1 load-fns)
           " "))
        lst2 ""))
      (insert ")))\n    (elp-instrument-list)\n    (elp-reset-all)\n    (setq elp-reset-after-results 't)))\n(provide 'esn-profile)\n"))))
(provide 'esn-autoloads-gen)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; esn-autoloads.el ends here
